#!/usr/bin/env node
"use strict";var H=Object.create;var O=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var X=Object.getOwnPropertyNames;var Y=Object.getPrototypeOf,Z=Object.prototype.hasOwnProperty;var oo=(o,t,n,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of X(t))!Z.call(o,s)&&s!==n&&O(o,s,{get:()=>t[s],enumerable:!(i=L(t,s))||i.enumerable});return o};var c=(o,t,n)=>(n=o!=null?H(Y(o)):{},oo(t||!o||!o.__esModule?O(n,"default",{value:o,enumerable:!0}):n,o));var G=c(require("fs")),W=require("typescript");var A=c(require("fast-glob")),C=c(require("path")),to=async o=>{let t=await(0,A.default)(o,{absolute:!0,ignore:["**/node_modules/**"]}),n=C.default.dirname(process.argv[1]);return t.map(s=>C.default.resolve(n,s))},T=to;var M=c(require("../package.json")),no=async()=>{let o=await T(["**/mtg.config.*s","**/mongo-type-gen.config.*s"]),t=await import(o[0]);return o.length>1&&console.log(`\u{1F7E1} ${M.default.name} found multiple config files.  Using ${o[0]}.`),t.default},S=no;function eo(o){let t={es:"",ies:"y",oes:"o",s:"",ves:"f",xes:"x"};for(let n in t)if(o.endsWith(n))return o.slice(0,-n.length)+t[n];return o}var N=eo;var E=c(require("fs")),K=c(require("../package.json"));function so({dirs:o,onChange:t}){console.info(`\u2705 ${K.default.name} watching: ${o.join(", ")}`);let n=!1;o.forEach(i=>{let s=E.default.watch(i,{recursive:!0});s.on("change",(p,r)=>{n||(n=!0,t(),r&&setTimeout(()=>{n=!1},2e3))}),s.on("error",p=>{console.error(`watchDirs error: ${p}`)}),s.on("close",()=>{console.log("watchDirs closed")})})}var V=so;var R=c(require("fs")),q=require("util"),ro=(0,q.promisify)(R.default.writeFile),b=ro;var Q=require("mongodb");var io=o=>{if(!o)return"";let t=Object.keys(o);return!t||!t.length?"{}":JSON.stringify(o,null,2).replace(/"([^"]+)":/g,"$1:").replace(/"([^"]*)"/g,(p,r)=>r.includes("'")?`"${r}"`:`'${r}'`)},J=io;var x=c(require("../package.json")),P;async function ao(){try{let o=await S();if(!o.uri)throw Error("I cannot connect to download your validators from Mongo without a uri.");let t=[],n="/* This file is generated by mongo-type-gen.  Do not edit */";P=new Q.MongoClient(o.uri);let s=await P.db(o.db).listCollections().toArray();for(let p of s){let g=p.options.validator,j=J(g),l=[n,`export default ${j};`].join(`

`),e=b(`./${o.output}/${p.name}.validator.ts`,l);t.push(e)}return await Promise.all(t),console.info(`\u2705 ${x.default.name} validators downloaded from Mongo!`),0}catch(o){let t=o instanceof Error?o.message:o;return console.error(`\u274C ${x.default.name} failed to download validators from Mongo: `,t),1}finally{await P.close()}}var U=ao;var I=c(require("../package.json")),D={bool:"boolean",date:"Date",double:"number",int:"number",objectId:"ObjectId | string",string:"string"},F={bool:"Boolean",date:"Date",double:"Float",int:"Int",objectId:"ObjectId",string:"String"},k=({allSdls:o=[],allTypes:t=[],collectionName:n,obj:i})=>{let{properties:s,required:p=[]}=i,r=[],g=[],j=Object.keys(s).sort();for(let l of j){let e=s[l],h=p.includes(l),$=h?l:`${l}?`,w=l,_=l.charAt(0).toUpperCase()+l.slice(1),u=`${n}${_}`;if(e.enum){let f=[`export enum ${u}Enum {`,...e.enum.sort().map(a=>`  ${a} = '${a}',`),"}"].join(`
`);t.push(f);let m=[`   enum ${u}Enum {`,...e.enum.map(a=>`    ${a}`),"  }"].join(`
`);o.push(m);continue}if(typeof e.bsonType=="string"){if(e.bsonType==="array"){let a=D[e.items.bsonType],d=a||u,y=F[e.items.bsonType],B=y||u;r.push(`  ${$}: ${d}[];`),g.push(`    ${w}: [${B}${h?"!":""}]`),a||k({allSdls:o,allTypes:t,collectionName:u,obj:e.items});continue}if(e.bsonType==="object"){r.push(`  ${$}: ${u};`),g.push(`    ${w}: ${u}${h?"!":""}`),k({allSdls:o,allTypes:t,collectionName:u,obj:e});continue}let f=D[e.bsonType],m=F[e.bsonType];if(f||f){f&&r.push(`  ${$}: ${f};`),m&&g.push(`    ${w}: ${m}${h?"!":""}`);continue}}if(Array.isArray(e.bsonType)){if(!(e.bsonType.includes("null")||e.bsonType.length===1))throw Error("Only one bsonType and null are supported for a bsonType array");let m=[];e.bsonType.forEach(d=>{let y=D[d];d==="null"?m.push("null"):y&&m.push(y)}),r.push(`  ${$}: ${m.join(" | ")};`);let a=e.bsonType.filter(d=>d!=="null");g.push(`    ${w}: ${F[a[0]]}${h?"!":""}`)}}t.push([`export type ${n} = {`,...r,"};"].join(`
`)),o.push([`  type ${n} {`,...g,"  }"].join(`
`))},z=async({outputPath,validatorPaths})=>{let banner="/* This file is generated by mongo-type-gen.  Do not edit */",allTypes=[banner,"import { ObjectId } from 'mongodb';"],allSdls=[banner,"import { gql } from 'graphql-tag';","export default gql`"];for(let path of validatorPaths){let validatorStr=G.default.readFileSync(path,"utf8"),validator=(0,W.transpile)(validatorStr),v=eval(validator),cName=path.split("/").pop()?.split(".")[0]||"",properCname=cName.charAt(0).toUpperCase()+cName.slice(1),singularCname=N(properCname);k({allSdls,allTypes,collectionName:`${singularCname}Doc`,obj:v.$jsonSchema})}let tsString=allTypes.join(`

`),sdlString=[...allSdls,"`;"].join(`

`);await Promise.all([b(`./${outputPath}/mongo.types.ts`,tsString),b(`./${outputPath}/mongo.sdls.ts`,sdlString)]),console.info(`\u2705 ${I.default.name} types generated!`)},lo=async()=>{let o=await S(),t=process.argv.includes("--watch")||process.argv.includes("-w"),n=await T("**/*.validator.*s");n.length||(console.info(`\u26A0\uFE0F ${I.default.name} could not find any validators files, downnloading from Mongo...`),await U()),t&&V({dirs:n,onChange:async()=>z({outputPath:o.output,validatorPaths:n})}),z({outputPath:o.output,validatorPaths:n})};lo().catch(o=>{console.error("\u274C genTypes failed: ",o),process.exit(1)});
//# sourceMappingURL=genTypes.js.map
