#!/usr/bin/env node
"use strict";var D=Object.create;var a=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var Q=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var J=(o,t)=>{for(var n in t)a(o,n,{get:t[n],enumerable:!0})},u=(o,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of P(t))!A.call(o,e)&&e!==n&&a(o,e,{get:()=>t[e],enumerable:!(r=M(t,e))||r.enumerable});return o};var s=(o,t,n)=>(n=o!=null?D(Q(o)):{},u(t||!o||!o.__esModule?a(n,"default",{value:o,enumerable:!0}):n,o)),S=o=>u(a({},"__esModule",{value:!0}),o);var N={};J(N,{default:()=>I});module.exports=S(N);var $=require("mongodb");var j=o=>{if(!o)return"";let t=Object.keys(o);return!t||!t.length?"{}":JSON.stringify(o,null,2).replace(/"([^"]+)":/g,"$1:").replace(/"([^"]*)"/g,(l,i)=>i.includes("'")?`"${i}"`:`'${i}'`)},g=j;var d=s(require("fast-glob")),c=s(require("path")),E=async o=>{let t=await(0,d.default)(o,{absolute:!0,ignore:["**/node_modules/**"]}),n=c.default.dirname(process.argv[1]);return t.map(e=>c.default.resolve(n,e))},p=E;var w=s(require("../package.json")),G=async()=>{let o=await p(["**/mtg.config.*s","**/mongo-type-gen.config.*s"]),t=await import(o[0]);return o.length>1&&console.log(`\u{1F7E1} ${w.default.name} found multiple config files.  Using ${o[0]}.`),t.default},y=G;var b=s(require("fs")),v=require("util"),K=(0,v.promisify)(b.default.writeFile),h=K;var m=s(require("../package.json")),f;async function O(){try{let o=await y();if(!o.uri)throw Error("I cannot connect to download your validators from Mongo without a uri.");let t=[],n="/* This file is generated by mongo-type-gen.  Do not edit */";f=new $.MongoClient(o.uri);let e=await f.db(o.db).listCollections().toArray();for(let l of e){let C=l.options.validator,F=g(C),k=[n,`export default ${F};`].join(`

`),x=h(`./${o.output}/${l.name}.validator.ts`,k);t.push(x)}return await Promise.all(t),console.info(`\u2705 ${m.default.name} validators downloaded from Mongo!`),0}catch(o){let t=o instanceof Error?o.message:o;return console.error(`\u274C ${m.default.name} failed to download validators from Mongo: `,t),1}finally{await f.close()}}var I=O;
//# sourceMappingURL=downloadValidators.js.map
