//import fs from 'fs';
import { MongoClient } from 'mongodb';

import formatJsonString from './common/formatJsonSting';
import getConfig from './common/getConfig';
import writeFileAsync from './common/writeFileAsync';
import pkg from '../package.json';

// Replace the uri string with your MongoDB deployment's connection string.
let client: MongoClient;

async function downloadValidators(): Promise<number> {
  try {
    const config = await getConfig();
    if (!config.uri) {
      throw Error('I cannot connect to download your validators from Mongo without a uri.');
    }
    const files = [];
    const banner = '/* This file is generated by mongo-type-gen.  Do not edit */';

    client = new MongoClient(config.uri);

    const db = client.db(config.db);
    const listCollections = await db.listCollections().toArray();

    for (const col of listCollections) {
      const c = col as unknown as { options: { validator: string } };
      const v = c.options.validator;
      const s = formatJsonString(v);

      const tsCode = [banner, `export default ${s};`].join('\n\n');
      const file = writeFileAsync(`./${config.output}/${col.name}.validator.ts`, tsCode);
      files.push(file);
    }

    await Promise.all(files);
    console.info(`✅ ${pkg.name} validators downloaded from Mongo!`);
    return 0;
  } catch (e) {
    const error = e instanceof Error ? e.message : e;
    console.error(`❌ ${pkg.name} failed to download validators from Mongo: `, error);
    return 1;
  } finally {
    await client.close();
  }
}

export default downloadValidators;
